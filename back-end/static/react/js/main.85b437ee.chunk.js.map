{"version":3,"sources":["Images/loading.gif","Home.js","Constants/enum.js","AirlineInfo.js","Component/AirlineCard.js","Component/FlightCard.js","Component/AirportCard.js","Component/InfoGrid.js","Component/Pagination.js","Airlines.js","Flights.js","Airports.js","About.js","Component/Layout.js","Component/NavBar.js","AirportInfo.js","FlightInfo.js","App.js","serviceWorker.js","index.js","Images/Video1.mp4","Images/albin.jpg","Images/yijing.jpeg","Images/noah.jpg","Images/li.jpg","Images/kevin.jpg"],"names":["module","exports","Home","className","id","loop","autoPlay","muted","src","Video","type","class","href","Nav","Link","INFO_TYPES","Object","freeze","num","window","location","pathname","substring","replace","AirlineInfo","useState","info","setInfo","useEffect","fetch","then","response","json","data","iata_code","airline_name","Title","country_name","date_founded","fleet_average_age","useStyles","makeStyles","root","maxWidth","height","media","width","button","justifyContent","AirlineCard","props","classes","Card","ButtonBase","style","textAlign","alignItems","paddingRight","marginTop","onClick","event","airline_id","CardActionArea","CardMedia","image","paddingTop","FlightCard","flight_id","departure_airport","arrival_airport","flight_date","AirportCard","airport_id","airport_name","country_image_url","theme","flexGrow","margin","control","padding","spacing","InfoGrid","React","infoData","Grid","container","item","xs","justify","map","index","key","AIRLINES","FLIGHTS","AIRPORTS","_getInfoCard","infoCardType","Pagination","postsPerPages","totalPosts","paginate","PageNumbers","numPages","Math","ceil","i","min","currPage","max","push","aria-label","aria-hidden","number","order","Airlines","isLoading","setLoading","error","airlines","setAirlines","currentPage","setCurrentPage","postsPerPage","d","timeout","setTimeout","ok","Error","catch","setState","xmlns","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","stroke-dasharray","stroke-dashoffset","message","GetSortOrder","prop","ord","a","b","indexOfLastPost","indexOfFirstPost","currentPosts","slice","newAirlines","sort","length","pageNumber","flightsData","port","Flights","m","setM","newM","Airports","airports","setAirports","newAirports","console","log","albin","addEventListener","loader","document","querySelector","About","alt","yijing","noah","kevin","li","Layout","Container","children","NavBar","Navbar","fixed","expand","Brand","Toggle","aria-controls","Collapse","Form","inline","action","method","name","placeholder","Button","variant","value","refreshPage","reload","airData","air","dataLength","display","maxHeight","overflow","to","construction_number","flightData","flight","AirlinesLink","FlightsLink","AirportInfo","setLine","clasNames","timezone","gmt","geoname_id","latitude","longitude","flights","filter","departure_scheduled","arrival_scheduled","flight_number","flight_status","FlightInfo","Component","App","Fragment","path","exact","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,8B,0KCK9BC,EAAO,WAChB,OAEI,yBAAKC,UAAU,QAEX,yBAAKA,UAAU,SACX,2BAAOC,GAAG,mBAAmBC,MAAI,EAACC,UAAQ,EAACC,OAAK,GAC5C,4BAAQC,IAAKC,IAAOC,KAAK,cACzB,4BAAQF,IAAKC,IAAOC,KAAK,cAF7B,iDAQJ,yBAAKC,MAAM,oBACP,yBAAKR,UAAU,iBACX,6BACA,0CAEA,+EACA,kGACA,2GACA,yEAIR,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,cACX,uBAAGS,KAAK,UACJ,sCAIZ,yBAAKT,UAAU,aACX,yBAAKA,UAAU,2DAA2DC,GAAG,SACzE,kBAACS,EAAA,EAAIC,KAAL,CAAUX,UAAU,sBAAsBS,KAAK,aAC3C,yBAAKT,UAAU,iBACX,yCAIR,kBAACU,EAAA,EAAIC,KAAL,CAAUX,UAAU,sBAAsBS,KAAK,YAC3C,yBAAKT,UAAU,iBACX,wCAGR,kBAACU,EAAA,EAAIC,KAAL,CAAUX,UAAU,sBAAsBS,KAAK,aAC3C,yBAAKT,UAAU,iBACX,2CAMhB,yBAAKA,UAAU,cAAf,O,iDCrDGY,EANIC,OAAOC,OAAO,CAC7B,SAAY,WACZ,QAAW,UACX,SAAY,a,6CCMVC,G,aAAMC,OAAOC,SAASC,SAASC,UAAU,IAAIC,QAAQ,QAAS,MAE9DC,EAAc,WAAO,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,KAYtB,OATAC,qBAAU,WAENC,MAAM,mCAAqCX,GACtCY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAQM,QAE3B,IAIC,yBAAK9B,UAAU,yBAEX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QACX,yBAAKK,IAAK,8EAAgFkB,EAAKQ,cAIvG,yBAAK/B,UAAU,eAEX,yBAAKA,UAAU,uCACX,2CAIR,yBAAKQ,MAAM,WAEX,yBAAKR,UAAU,eACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,aACX,wBAAIQ,MAAM,cAAce,EAAKS,cAC7B,kBAAC,IAAKC,MAAN,iBAAsBV,EAAKW,cAC3B,kBAAC,IAAKD,MAAN,oBAAyBV,EAAKY,cAC9B,kBAAC,IAAKF,MAAN,8BAAmCV,EAAKa,mBACxC,kBAAC,IAAKH,MAAN,mBAAwBV,EAAKQ,cAKzC,yBAAK/B,UAAU,UACX,yBAAKA,UAAU,+BACX,8CC3ClBqC,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,OAAQ,KAGZC,MAAO,CACHD,OAAQ,GACRE,MAAO,KAGXC,OAAQ,CACJC,eAAgB,YAyCTC,EApCK,SAAAC,GAChB,IAAMxB,EAAOwB,EAAMxB,KACbyB,EAAUX,IAEhB,OACI,yBAAKrC,UAAU,eACX,kBAACiD,EAAA,EAAD,CAAMjD,UAAWgD,EAAQT,MACrB,kBAACW,EAAA,EAAD,CAAYlD,UAAWgD,EAAQJ,OAAQO,MAAO,CAC1CC,UAAW,SACXP,eAAgB,SAChBQ,WAAY,SACZC,aAAc,GACdC,UAAW,IACXd,OAAQ,IAEAe,QAAS,SAAAC,GAAK,OAAIzC,OAAOC,SAASR,KAAO,aAAec,EAAKmC,aACrE,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CACI5D,UAAWgD,EAAQN,MAAOzC,GAAG,QAC7B4D,MAAO,8EAAgFtC,EAAKQ,YAGhG,wBAAIvB,MAAM,oBACN,wBAAIA,MAAM,mBAAV,iBAA2Ce,EAAKS,cAChD,wBAAIxB,MAAM,mBAAV,YAAsCe,EAAKW,oBC5CjEG,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,OAAQ,IACRI,eAAgB,SAChBO,UAAW,SACXC,WAAY,SACZE,UAAW,IACXO,WAAY,MAsBLC,EAlBI,SAAAhB,GACf,IAAMxB,EAAOwB,EAAMxB,KACbyB,EAAUX,IAChB,OACI,yBAAKrC,UAAU,cACX,kBAACiD,EAAA,EAAD,CAAMjD,UAAWgD,EAAQT,KAAMiB,QAAS,SAAAC,GAAK,OAAIzC,OAAOC,SAASR,KAAO,YAAcc,EAAKyC,YACvF,wBAAIxD,MAAM,oBACN,wBAAIA,MAAM,mBAAV,cAAwCe,EAAK0C,mBAC7C,wBAAIzD,MAAM,mBAAV,YAAsCe,EAAK2C,iBAC3C,wBAAI1D,MAAM,mBAAV,SAAmCe,EAAK4C,iBCrBtD9B,EAAYC,YAAW,CACzBC,KAAM,CACFI,MAAO,IACPF,OAAQ,IACRc,UAAW,IAEfb,MAAO,CACHD,OAAQ,GACRE,MAAO,GACPS,UAAW,SACXP,eAAgB,SAChBU,UAAW,MA0BJa,EAtBK,SAAArB,GAChB,IAAMxB,EAAOwB,EAAMxB,KACbyB,EAAUX,IAChB,OACI,yBAAKrC,UAAU,eACX,kBAACiD,EAAA,EAAD,CAAMjD,UAAWgD,EAAQT,KAAMiB,QAAS,SAAAC,GAAK,OAAIzC,OAAOC,SAASR,KAAO,aAAec,EAAK8C,aACxF,wBAAI7D,MAAM,oBACN,wBAAIA,MAAM,mBAAV,SAAmCe,EAAK+C,cACxC,wBAAI9D,MAAM,mBAAV,sBAAgDe,EAAKW,cACrD,kBAAC0B,EAAA,EAAD,CACI5D,UAAWgD,EAAQN,MACnBmB,MAAOtC,EAAKgD,wBC9B9BlC,EAAYC,aAAW,SAACkC,GAAD,MAAY,CACvCjC,KAAM,CACJkC,SAAU,EACVC,OAAQ,GAEVC,QAAS,CACPC,QAASJ,EAAMK,QAAQ,QA6CZC,EAtBE,SAAA/B,GAAU,IAAD,EACMgC,IAAMzD,SAAS,IADrB,mBACjBuD,EADiB,KAElB7B,GAFkB,KAERX,KACV2C,EAAWjC,EAAMiC,SAEvB,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAClF,UAAWgD,EAAQT,KAAMsC,QAASA,GAChD,kBAACI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAQ,SAASR,QAASA,GACvCG,EAASM,KAAI,SAAC/D,EAAMgE,GAAP,OACZ,kBAACN,EAAA,EAAD,CAAMO,IAAKD,EAAOJ,MAAI,EAACC,GAAI,GA5BlB,SAAC7E,EAAMgB,GAC1B,OAAQhB,GACN,KAAKK,EAAW6E,SACd,OACE,kBAAC,EAAD,CAAalE,KAAMA,IACvB,KAAKX,EAAW8E,QACd,OACE,kBAAC,EAAD,CAAYnE,KAAMA,IAEtB,KAAKX,EAAW+E,SACd,OACE,kBAAC,EAAD,CAAapE,KAAMA,IAEvB,QACE,OAAQ,+BAeDqE,CAAa7C,EAAM8C,aAActE,WCZ/BuE,G,gCAjCI,SAAC,GAKhB,IAL2D,IAA1CC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAEtCC,EAAc,GACdC,EAAWC,KAAKC,KAAKL,EAAWD,GAE9BO,EADS,EACKA,GAAKF,KAAKG,IAAIC,GAAeJ,KAAKK,IAAIN,EAAUK,KAAeF,IACjFJ,EAAYQ,KAAKJ,GAErB,OACI,6BACI,wBAAItG,UAAU,cACV,wBAAIA,UAAU,kBACV,uBAAGS,KAAK,IAAIkG,aAAW,OAAO3G,UAAU,aACpC,0BAAM4G,cAAY,QAAlB,UAGPV,EAAYZ,KAAI,SAAAuB,GAAM,OACnB,wBAAIrB,IAAKqB,EAAQ7G,UAAU,aACvB,uBAAGwD,QAAS,kBAAMyC,EAASY,IAAU7G,UAAU,aAC1C6G,OAIb,wBAAI7G,UAAU,kBACV,uBAAGS,KAAK,IAAIkG,aAAW,OAAO3G,UAAU,aACpC,0BAAM4G,cAAY,QAAlB,c,SCfpBE,EAAQ,EA0IGC,EAvIE,SAAAhE,GAAU,IAiDR,EAjDO,EACUzB,oBAAS,GADnB,mBACf0F,EADe,KACJC,EADI,OAEI3F,mBAAS,MAFb,mBAEf4F,EAFe,aAGU5F,mBAAS,KAHnB,mBAGf6F,EAHe,KAGLC,EAHK,OAKgB9F,mBAAS,GALzB,mBAKf+F,EALe,KAKFC,EALE,OAMChG,mBAAS,IAAzBiG,EANe,oBAiDtB,GAxCA9F,qBAAU,WACNwF,EAAW,CAACD,WAAW,IAkB3B,WACoB,IAAD,EAAf,GAAIA,EASY,GAAMhH,UAAU,oBACVwH,EAAE,01CADR,0BAEgB,qBAFhB,qBAEyC,WA7BzDC,GACAC,YAAW,WACPT,GAAW,KACZ,MACHvF,MAAM,yDAEDC,MAAK,SAAAC,GACF,GAAIA,EAAS+F,GACT,OAAO/F,EAASC,OAEhB,MAAM,IAAI+F,MAAM,8BAGvBjG,MAAK,SAAAG,GAAI,OAAIsF,EAAYtF,EAAKqF,aAC9BU,OAAM,SAAAX,GAAK,OAAI,EAAKY,SAAS,CAAEZ,QAAOF,WAAW,SACvD,IAuBCA,EACA,OACI,yBAAKhH,UAAU,iBACX,yBAAKA,UAAU,gBAAgB+H,MAAM,6BAA6BpF,MAAM,MAAMF,OAAO,OACjF,0BAAMzC,UAAU,mBACVwH,EAAE,4KACFQ,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,iBAAe,QAAQC,kBAAgB,QACrFC,mBAAiB,2BAA2BC,oBAAkB,OACpE,6BAAMtI,UAAU,oBACVwH,EAAE,01CADR,0BAEgB,qBAFhB,qBAEyC,WAFzC,MAQhB,GAAIN,EACA,OAAO,2BAAIA,EAAMqB,SAGrB,SAASC,EAAaC,EAAMC,GACxB,OAAO,SAAUC,EAAGC,GAChB,OAAY,IAARF,EACIC,EAAEF,GAAQG,EAAEH,GACL,EACAE,EAAEF,GAAQG,EAAEH,IACX,EAEL,EAEHE,EAAEF,GAAQG,EAAEH,GACL,EACAE,EAAEF,GAAQG,EAAEH,IACX,EAEL,GAMnB,IAAMI,EAAkBxB,EAAcE,EAChCuB,EAAmBD,EAAkBtB,EACrCwB,EAAe5B,EAAS6B,MAAMF,EAAkBD,GAKtD,OACI,6BACI,yBAAK7I,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,2BACX,uBAAGQ,MAAM,uBAAuBoG,cAAY,SAE5C,4BAAQrG,KAAK,SAASP,UAAU,wBAAwBwD,QAAS,WAC7D,IAAIyF,EAAW,YAAO9B,GACtB8B,EAAYC,KAAKV,EAAa,eAAgB1B,IAC9CA,IAAiB,EACjBM,EAAY6B,KAJhB,iBAQA,4BAAQ1I,KAAK,SAASP,UAAU,wBAAwBwD,QAAS,WAC7D,IAAIyF,EAAW,YAAO9B,GACtB8B,EAAYC,KAAKV,EAAa,eAAgB1B,IAC9CA,IAAiB,EACjBM,EAAY6B,KAJhB,kBAUR,kBAAC,EAAD,CAAUjE,SAAU+D,EAAclD,aAAcjF,EAAW6E,WAC3D,kBAAC,EAAD,CAAYM,cAAewB,EAAcvB,WAAYmB,EAASgC,OAAQlD,SA5BjE,SAACmD,GAAD,OAAgB9B,EAAe8B,S,gBCpG9CC,EAAcC,EAAI,QAExB,SAASd,EAAaC,EAAMC,GACxB,OAAO,SAAUC,EAAGC,GAChB,OAAY,IAARF,EACIC,EAAEF,GAAQG,EAAEH,GACL,EACAE,EAAEF,GAAQG,EAAEH,IACX,EAEL,EAEHE,EAAEF,GAAQG,EAAEH,GACL,EACAE,EAAEF,GAAQG,EAAEH,IACX,EAEL,GAKnB,IA2Gec,EA3GC,SAAAxG,GACZ,IAqCe,EArCX+D,EAAQ,EADS,EAEHxF,mBAAS+H,GAFN,mBAEdG,EAFc,KAEXC,EAFW,OAGWnI,oBAAS,GAHpB,mBAGd0F,EAHc,KAGHC,EAHG,OAIK3F,mBAAS,MAJd,mBAId4F,EAJc,aAMiB5F,mBAAS,IAN1B,mBAMd+F,EANc,KAMDC,EANC,OAOEhG,mBAAS,IAAzBiG,EAPc,oBAsCrB,GA7BA9F,qBAAU,WACNwF,EAAW,CAACD,WAAW,IAQ3B,WACoB,IAAD,EAAf,GAAIA,EASY,GAAMhH,UAAU,oBACVwH,EAAE,01CADR,0BAEgB,qBAFhB,qBAEyC,WAnBzDC,GACAC,YAAW,WACPT,GAAW,KACZ,MACHA,EAAW,CAACD,WAAW,MACxB,IAsBCA,EACA,OACI,yBAAKhH,UAAU,iBACX,yBAAKA,UAAU,gBAAgB+H,MAAM,6BAA6BpF,MAAM,MAAMF,OAAO,OACjF,0BAAMzC,UAAU,mBACVwH,EAAE,4KACFQ,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,iBAAe,QAAQC,kBAAgB,QACrFC,mBAAiB,2BAA2BC,oBAAkB,OACpE,6BAAMtI,UAAU,oBACVwH,EAAE,01CADR,0BAEgB,qBAFhB,qBAEyC,WAFzC,MAQhB,GAAIN,EACA,OAAO,2BAAIA,EAAMqB,SAIrB,IAAMM,EAAkBxB,EAAcE,EAChCuB,EAAmBD,EAAkBtB,EACrCwB,EAAeM,EAAYL,MAAMF,EAAkBD,GAIzD,OACI,yBAAK7I,UAAU,WACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,uBAAuB4G,cAAY,SAEhD,4BAAQrG,KAAK,SAASP,UAAU,wBAAwBwD,QAAS,WAC7D,IAAIkG,EAAI,YAAOF,GACfE,EAAKR,KAAKV,EAAa,qBAAsB1B,IAC7CA,IAAiB,EACjB2C,EAAKC,KAJT,aAQA,4BAAQnJ,KAAK,SAASP,UAAU,wBAAwBwD,QAAS,WAC7D,IAAIkG,EAAI,YAAOF,GACfE,EAAKR,KAAKV,EAAa,cAAe1B,IACtCA,IAAiB,EACjB2C,EAAKC,KAJT,WAQA,4BAAQnJ,KAAK,SAASP,UAAU,wBAAwBwD,QAAS,WAC7D,IAAIkG,EAAI,YAAOF,GACfE,EAAKR,KAAKV,EAAa,cAAe1B,IACtCA,IAAiB,EACjB2C,EAAKC,KAJT,UASR,6BAAK,8BACL,kBAAC,EAAD,CAAU1E,SAAU+D,EAAclD,aAAcjF,EAAW8E,UAC3D,kBAAC,EAAD,CAAYK,cAAewB,EAAcvB,WAAYqD,EAAYF,OAAQlD,SAlChE,SAACmD,GAAD,OAAgB9B,EAAe8B,Q,iBCvFhDtC,EAAQ,EAsIG6C,EApIE,SAAA5G,GAAU,IA8CR,EA9CO,EACUzB,oBAAS,GADnB,mBACf0F,EADe,KACJC,EADI,OAEI3F,mBAAS,MAFb,mBAEf4F,EAFe,aAGU5F,mBAAS,KAHnB,mBAGfsI,EAHe,KAGLC,EAHK,OAKgBvI,mBAAS,GALzB,mBAKf+F,EALe,KAKFC,EALE,OAMChG,mBAAS,IAAzBiG,EANe,oBA8CtB,GAtCC9F,qBAAU,WACPwF,EAAW,CAACD,WAAW,IAkB1B,WACmB,IAAD,EAAf,GAAIA,EASY,GAAMhH,UAAU,oBACVwH,EAAE,01CADR,0BAEgB,qBAFhB,qBAEyC,WA7BzDC,GACAC,YAAW,WACPT,GAAW,KACZ,MACHvF,MAAM,mCAEDC,MAAK,SAAAC,GACF,GAAIA,EAAS+F,GACT,OAAO/F,EAASC,OAEhB,MAAM,IAAI+F,MAAM,8BAGvBjG,MAAK,SAAAG,GAAI,OAAI+H,EAAY/H,EAAK8H,aAC9B/B,OAAM,SAAAX,GAAK,OAAI,EAAKY,SAAS,CAAEZ,QAAOF,WAAW,SACvD,IAqBCA,EACA,OACI,yBAAKhH,UAAU,iBACX,yBAAKA,UAAU,gBAAgB+H,MAAM,6BAA6BpF,MAAM,MAAMF,OAAO,OACjF,0BAAMzC,UAAU,mBACVwH,EAAE,4KACFQ,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIC,iBAAe,QAAQC,kBAAgB,QACrFC,mBAAiB,2BAA2BC,oBAAkB,OACpE,6BAAMtI,UAAU,oBACVwH,EAAE,01CADR,0BAEgB,qBAFhB,qBAEyC,WAFzC,MAQhB,GAAIN,EACA,OAAO,2BAAIA,EAAMqB,SAGrB,SAASC,EAAaC,EAAMC,GACxB,OAAO,SAAUC,EAAGC,GAChB,OAAY,IAARF,EACIC,EAAEF,GAAQG,EAAEH,GACL,EACAE,EAAEF,GAAQG,EAAEH,IACX,EAEL,EAEHE,EAAEF,GAAQG,EAAEH,GACL,EACAE,EAAEF,GAAQG,EAAEH,IACX,EAEL,GAMvB,IAAMI,EAAkBxB,EAAcE,EAChCuB,EAAmBD,EAAkBtB,EACrCwB,EAAea,EAASZ,MAAMF,EAAkBD,GAKlD,OACI,6BACI,yBAAK7I,UAAU,WACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,2BACX,uBAAGQ,MAAM,uBAAuBoG,cAAY,SAE5C,4BAAQrG,KAAK,SAASP,UAAU,wBAAwBwD,QAAS,WAC7D,IAAIsG,EAAW,YAAOF,GACtBE,EAAYZ,KAAKV,EAAa,eAAgB1B,IAC9CA,IAAiB,EACjB+C,EAAYC,KAJhB,gBAQA,4BAAQvJ,KAAK,SAASP,UAAU,wBAAwBwD,QAAS,WAC7D,IAAIsG,EAAW,YAAOF,GACtBE,EAAYZ,KAAKV,EAAa,eAAgB1B,IAC9CA,IAAiB,EACjB+C,EAAYC,KAJhB,kBAUR,kBAAC,EAAD,CAAU9E,SAAU+D,EAAclD,aAAcjF,EAAW+E,WAC3D,kBAAC,EAAD,CAAYI,cAAewB,EAAcvB,WAAY4D,EAAST,OAAQlD,SA5BrE,SAACmD,GAAD,OAAgB9B,EAAe8B,S,gGC/FhDW,QAAQC,IAAIC,KAEZjJ,OAAOkJ,iBAAiB,QAAQ,WAC5B,IAAMC,EAASC,SAASC,cAAc,WACtCN,QAAQC,IAAIG,MAGT,IAAMG,GAAQ,kBACjB,yBAAKtK,UAAU,SACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,6BAAK,8BACL,+CACA,6BAAK,8BACL,2IAEA,6BAAK,8BACL,6BAAK,8BACL,yDACA,6BAAK,8BACL,wDACA,6BAAK,8BACL,4DACA,6BAAK,8BACL,6BAAK,8BACL,4CAAiB,uBACbS,KAAK,2EADQ,kBAGjB,6BAAK,8BACL,8CAAmB,uBAAGA,KAAK,oDAAR,kBACnB,6BAAK,8BACL,4CAAiB,uBAAGA,KAAK,2CAAR,uBACjB,6BAAK,8BACL,4CAAiB,uBAAGA,KAAK,iDAAR,gBACjB,6BAAK,8BACL,8CAAmB,uBAAGA,KAAK,8BAAR,kBACnB,4BAAI,uBAAGA,KAAK,IAAR,cACJ,yKAEA,6BAAK,8BACL,6CACA,6CACA,6BAAK,8BACL,6BAAK,8BACL,6BAAK,+BAGT,yBAAKT,UAAU,UACX,6BAAK,8BACL,qDACA,yBAAKQ,MAAM,OACP,yBAAKH,IAAK4J,IAAOM,IAAI,UAEzB,6BAAK,8BACL,uBAAGvK,UAAU,QAAb,YACA,yhBAMA,uDACA,kDACA,iDACA,qDACA,2BACI,4BAAQA,UAAU,WAAU,uBAAGS,KAAK,sBAAR,aAEhC,6BAAK,8BACL,6BAAK,+BAGT,yBAAKT,UAAU,UACX,6BAAK,8BACL,kDACA,yBAAKA,UAAU,OACX,yBAAKK,IAAKmK,IAAQD,IAAI,QAE1B,6BAAK,8BACL,uBAAGvK,UAAU,QAAb,YACA,+KAEA,oDACA,kDACA,iDACA,qDACA,2BACI,4BAAQA,UAAU,WAAU,uBAAGS,KAAK,6BAAR,aAEhC,6BAAK,+BAGT,yBAAKT,UAAU,UACX,6BAAK,8BACL,mDACA,yBAAKA,UAAU,OACX,yBAAKK,IAAKoK,IAAMF,IAAI,QAExB,6BAAK,8BACL,uBAAGvK,UAAU,QAAb,WACA,sdAKA,qDACA,kDACA,iDACA,qDACA,2BACI,4BAAQA,UAAU,WAAU,uBAAGS,KAAK,kCAAR,aAEhC,6BAAK,+BAGT,yBAAKT,UAAU,UACX,6BAAK,8BACL,+CACA,yBAAKA,UAAU,OACX,yBAAKK,IAAKqK,KAAOH,IAAI,QAEzB,6BAAK,8BACL,uBAAGvK,UAAU,QAAb,WACA,4HACA,oDACA,kDACA,iDACA,qDACA,2BACI,4BAAQA,UAAU,WAAU,uBAAGS,KAAK,iCAAR,aAEhC,6BAAK,+BAGT,yBAAKT,UAAU,UACX,6BAAK,8BACL,iDACA,yBAAKA,UAAU,OACX,yBAAKK,IAAKsK,KAAIJ,IAAI,QAEtB,6BAAK,8BACL,uBAAGvK,UAAU,QAAb,YACA,8NAEA,mDACA,kDACA,iDACA,qDACA,2BACI,4BAAQA,UAAU,WAAU,uBAAGS,KAAK,gCAAR,aAEhC,6BAAK,8BACL,6BAAK,kC,UC9JRmK,GAAS,SAAC7H,GAAD,OAClB,kBAAC8H,GAAA,EAAD,KACK9H,EAAM+H,W,8BCAFC,I,OAAS,kBAElB,kBAACC,GAAA,EAAD,CAAQhL,UAAU,SAASiL,MAAM,MAAMC,OAAO,MAC1C,kBAACF,GAAA,EAAOG,MAAR,CAAc1K,KAAK,KACf,uBAAGT,UAAU,eACT,0BAAMA,UAAU,SAAhB,eAGR,kBAACgL,GAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,GAAA,EAAOM,SAAR,CAAiBrL,GAAG,oBAChB,kBAACS,EAAA,EAAD,CAAKV,UAAU,WACX,kBAACU,EAAA,EAAIC,KAAL,CAAUX,UAAU,OAAOS,KAAK,KAAhC,QACA,kBAACC,EAAA,EAAIC,KAAL,CAAUX,UAAU,OAAOS,KAAK,aAAhC,YACA,kBAACC,EAAA,EAAIC,KAAL,CAAUX,UAAU,OAAOS,KAAK,YAAhC,WACA,kBAACC,EAAA,EAAIC,KAAL,CAAUX,UAAU,OAAOS,KAAK,aAAhC,YACA,kBAACC,EAAA,EAAIC,KAAL,CAAUX,UAAU,OAAOS,KAAK,UAAhC,UAEJ,6BACI,kBAAC8K,GAAA,EAAD,CAAMC,QAAM,EAACC,OAAO,gCAAgCC,OAAO,OACvD,2BAAOnL,KAAK,OAAOoL,KAAK,IAAIC,YAAY,SAAS5L,UAAU,YAC3D,kBAAC6L,GAAA,EAAD,CAAQC,QAAQ,gBAAgBvL,KAAK,SAASwL,MAAM,iBAApD,gB,SCddhL,GAAMC,OAAOC,SAASC,SAASC,UAAU,IAAIC,QAAQ,QAAS,KAEpE,SAAS4K,KACLhL,OAAOC,SAASgL,QAAO,GAG3B,IAAMC,GAAUC,EAAIrK,KAAKwD,KAAI,SAACxD,GAC1B,OACI,kBAAC,KAAD,CAAgBsK,WAAY,IACZjJ,MAAO,CAACkJ,QAAS,cAAeC,UAAW,QAASC,SAAU,OAAQ9J,OAAQ,QAC9EA,OAAQ,KACpB,6BACI,mCAAGe,QAASwI,GAAaQ,GAAI,aAAe1K,EAAK2K,qBAAjD,WACY,SAAAhJ,GAAK,OAAIzC,OAAOC,SAASR,KAAO,aAAeqB,EAAK2K,uBAEnD,MAAR3K,GAA+B,GAAfA,EAAKqH,OAClBrH,EAAK2K,oBACL,6BAOlBC,GAAaC,EAAO7K,KAAKwD,KAAI,SAACxD,GAChC,OACI,kBAAC,KAAD,CAAgBsK,WAAY,IACZjJ,MAAO,CAACkJ,QAAS,cAAeC,UAAW,QAASC,SAAU,OAAQ9J,OAAQ,QAC9EA,OAAQ,KACpB,6BACI,mCAAGe,QAASwI,GAAaQ,GAAI,YAAc1K,EAAK6K,OAAO9F,QAAvD,WACY,SAAApD,GAAK,OAAIzC,OAAOC,SAASR,KAAO,YAAcqB,EAAK6K,OAAO9F,UAEzD,MAAR/E,GAA+B,MAAfA,EAAK6K,QAAiC,GAAf7K,EAAKqH,OACzCrH,EAAK6K,OAAO9F,OACZ,6BAOlB+F,GACF,yBAAK5M,UAAU,UACX,yBAAKA,UAAU,oCACX,0CACA,yBAAKA,UAAU,wBACX,6BACCkM,MAKXW,GACF,yBAAK7M,UAAU,UACX,yBAAKA,UAAU,oCACX,yCACA,yBAAKA,UAAU,wBACX,6BACC0M,MAMXI,GAAc,WAAO,IAAD,EACExL,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,OAEMF,mBAAS,IAFf,mBAELyL,GAFK,aAGUzL,mBAAS,IAHnB,6BAetB,OAXAG,qBAAU,WAENC,MAAM,mCAAqCX,IACtCY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAQM,MAC1BJ,MAAM,kCAAoCX,IACrCY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIiL,EAAQjL,QAC3B,IACHiI,QAAQC,IAAIjJ,IAGR,yBAAKf,UAAU,yBAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,QACX,yBAAKK,IAAKkB,EAAKgD,kBAAoBvE,UAAU,SAASyC,OAAO,SAIrE,6BACKmK,IAIL,yBAAKI,UAAU,WAEf,yBAAKhN,UAAU,eACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,aACX,kBAAC,IAAKiC,MAAN,KAAaV,EAAK+C,cAClB,kBAAC,IAAKrC,MAAN,2BAAgCV,EAAKW,cACrC,kBAAC,IAAKD,MAAN,kBAAuBV,EAAK0L,UAC5B,kBAAC,IAAKhL,MAAN,aAAkBV,EAAK2L,KACvB,kBAAC,IAAKjL,MAAN,mBAAwBV,EAAKQ,WAC7B,kBAAC,IAAKE,MAAN,oBAAyBV,EAAK4L,YAC9B,kBAAC,IAAKlL,MAAN,kBAAuBV,EAAK6L,UAC5B,kBAAC,IAAKnL,MAAN,mBAAwBV,EAAK8L,cAKzC,6BACKR,O,oCCnHf5M,GAAKe,OAAOC,SAASC,SAASC,UAAU,GAAGC,QAAQ,QAAS,KAE5DsL,GADOpD,EAAKgE,QAAQC,QAAO,SAAAzL,GAAI,OAAIA,EAAKkC,WAAa/D,MACnCqF,KAAI,SAACxD,EAAMyD,EAAOjB,GACtC,OACI,yBAAKtE,UAAU,wBAEX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QACX,yBAAKK,IAAK,+EAIlB,yBAAKL,UAAU,eAEX,yBAAKA,UAAU,uCACX,2CAIR,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,aACX,kBAAC,IAAKiC,MAAN,mBAAwBH,EAAKmC,mBAC7B,kBAAC,IAAKhC,MAAN,6BAAkCH,EAAK0L,qBACvC,kBAAC,IAAKvL,MAAN,iBAAsBH,EAAKoC,iBAC3B,kBAAC,IAAKjC,MAAN,6BAAkCH,EAAK2L,mBACvC,kBAAC,IAAKxL,MAAN,uBAA4BH,EAAK4L,eACjC,kBAAC,IAAKzL,MAAN,cAAmBH,EAAKqC,aACxB,kBAAC,IAAKlC,MAAN,gBAAqBH,EAAK6L,kBAKtC,yBAAK3N,UAAU,UACX,yBAAKA,UAAU,+BACX,gDAUlB4N,G,2KAWE,OACI,6BACI,6BAAK,8BACJlB,Q,GAdQmB,aCLVC,OAtCf,WAEI,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,YAAYC,OAAK,GACzB,kBAAC,GAAD,KAAQ,kBAAC,EAAD,QAEZ,kBAAC,IAAD,CAAOD,KAAK,iBACR,kBAAC,GAAD,KAAQ,kBAAC,EAAD,QAEZ,kBAAC,IAAD,CAAOA,KAAK,WAAWC,OAAK,GACxB,kBAAC,GAAD,SAAS,kBAAC,EAAD,QAEb,kBAAC,IAAD,CAAOD,KAAK,gBACR,kBAAC,GAAD,SAAS,kBAAC,GAAD,QAEb,kBAAC,IAAD,CAAOA,KAAK,YAAYC,OAAK,GACzB,kBAAC,GAAD,UAAU,kBAAC,EAAD,QAEd,kBAAC,IAAD,CAAOD,KAAK,iBACR,kBAAC,GAAD,WAAW,kBAAC,GAAD,QAEf,kBAAC,IAAD,CAAOA,KAAK,UACR,kBAAC,GAAD,UAAU,kBAAC,GAAD,OACV,kBAAC,IAAD,CAAOA,KAAK,UAEhB,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GAArB,IAAuB,kBAAC,EAAD,WChCvBC,QACW,cAA7BlN,OAAOC,SAASkN,UAEe,UAA7BnN,OAAOC,SAASkN,UAEhBnN,OAAOC,SAASkN,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFlE,SAASmE,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/M,MAAK,SAAAgN,GACJA,EAAaC,gBAEd/G,OAAM,SAAAX,GACL6C,QAAQ7C,MAAMA,EAAMqB,a,s2zeEzI5B1I,EAAOC,QAAU,IAA0B,6B,mBCA3CD,EAAOC,QAAU,IAA0B,4B,8DCA3CD,EAAOC,QAAU,IAA0B,8B,mBCA3CD,EAAOC,QAAU,IAA0B,2B,mBCA3CD,EAAOC,QAAU,IAA0B,yB,mBCA3CD,EAAOC,QAAU,IAA0B,4B","file":"js/main.85b437ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/loading.602cdca7.gif\";","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Video from \"./Images/Video1.mp4\"\r\n\r\nexport const Home = () => {\r\n    return (\r\n\r\n        <div className=\"Home\">\r\n\r\n            <div className=\"video\">\r\n                <video id=\"background-video\" loop autoPlay muted>\r\n                    <source src={Video} type=\"video/mp4\" />\r\n                    <source src={Video} type=\"video/ogg\" />\r\n\t\t\t    Your browser does not support the video tag.\r\n\t\t\t</video>\r\n            </div>\r\n\r\n\r\n            <div class=\"text text-center\">\r\n                <div className=\"square center\">\r\n                    <br />\r\n                    <h1> Welcome! </h1>\r\n\r\n                    <p>&#9992; Do you want to know more about airlines? </p>\r\n                    <p>&#9992; Or do you want to look up flight information for your trip? </p>\r\n                    <p>&#9992; We have all you want to know about airplanes, flights, and airports! </p>\r\n                    <p>&#9992; Press the button below to begin. </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"scroll-button\">\r\n                <div className=\"scroll-bar\">\r\n                    <a href=\"#boxes\">\r\n                        <span> </span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row row-cols-3 align-items-center justify-content-center\" id=\"boxes\">\r\n                    <Nav.Link className=\"link col-9 col-sm-3\" href=\"/airlines\">\r\n                        <div className=\"roundedCorner\">\r\n                            <p>Airlines</p>\r\n                        </div>\r\n                    </Nav.Link>\r\n\r\n                    <Nav.Link className=\"link col-9 col-sm-3\" href=\"/flights\">\r\n                        <div className=\"roundedCorner\">\r\n                            <p>Flights</p>\r\n                        </div>\r\n                    </Nav.Link>\r\n                    <Nav.Link className=\"link col-9 col-sm-3\" href=\"/airports\">\r\n                        <div className=\"roundedCorner\">\r\n                            <p>Airports</p>\r\n                        </div>\r\n                    </Nav.Link>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"background\"> </div>\r\n\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\n\r\n","const INFO_TYPES = Object.freeze({\r\n    \"AIRLINES\": \"airlines\",\r\n    \"FLIGHTS\": \"flights\",\r\n    \"AIRPORTS\": \"airports\"\r\n});\r\n\r\nexport default INFO_TYPES;","import React, { useState, useEffect, Component } from 'react';\r\nimport port from './Data/airplanes.json';\r\nimport { Card } from \"react-bootstrap\";\r\nimport './info.css';\r\nimport axios from 'axios';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nconst num = window.location.pathname.substring(10).replace(/%20/gi, \" \");\r\n\r\nconst AirlineInfo = () => {\r\n    const [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('http://aeroinfo.me/api/airlines/' + num)\r\n            .then(response => response.json())\r\n            .then(data => setInfo(data))\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"AirlineInfo container\">\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"image\">\r\n                    <div className=\"card\">\r\n                        <img src={\"https://daisycon.io/images/airline/?width=300&height=150&color=ffffff&iata=\" + info.iata_code}></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"link-1 mb-5\">\r\n\r\n                    <div className=\"card bg-dark text-center text-white\">\r\n                        <h1>Flights: </h1>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"w-100 \"></div>\r\n\r\n                <div className=\"description\">\r\n                    <div className=\"card bg-dark text-center text-white\">\r\n                        <div className=\"card-body\">\r\n                            <h5 class=\"card-title\">{info.airline_name}</h5>\r\n                            <Card.Title>Country: {info.country_name}</Card.Title>\r\n                            <Card.Title>Data Found: {info.date_founded}</Card.Title>\r\n                            <Card.Title>Average Age of Fleet: {info.fleet_average_age}</Card.Title>\r\n                            <Card.Title>Iata Code: {info.iata_code}</Card.Title>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"link-2\">\r\n                    <div className=\"card text-center text-white\">\r\n                        <h1>Airports:</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { AirlineInfo };\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport {AirlineInfo} from \"../AirlineInfo\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: 290,\r\n    },\r\n\r\n    media: {\r\n        height: 70,\r\n        width: 160,\r\n    },\r\n\r\n    button: {\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\n\r\nconst AirlineCard = props => {\r\n    const info = props.info;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"AirlineCard\">\r\n            <Card className={classes.root}>\r\n                <ButtonBase className={classes.button} style={{\r\n                    textAlign: 'center',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    paddingRight: 50,\r\n                    marginTop: 100,\r\n                    height: 40\r\n                }}\r\n                            onClick={event => window.location.href = \"/airlines/\" + info.airline_id}>\r\n                    <CardActionArea>\r\n\r\n                        <CardMedia\r\n                            className={classes.media} id=\"image\"\r\n                            image={\"https://daisycon.io/images/airline/?width=300&height=150&color=ffffff&iata=\" + info.iata_code}\r\n                        />\r\n\r\n                        <ul class=\"list-group-flush\">\r\n                            <li class=\"list-group-item\">Airline Name: {info.airline_name}</li>\r\n                            <li class=\"list-group-item\">Country: {info.country_name}</li>\r\n                        </ul>\r\n                    </CardActionArea>\r\n                </ButtonBase>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nAirlineCard.propTypes = {};\r\n\r\nexport default AirlineCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: 250,\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 150,\r\n        paddingTop: 15\r\n    },\r\n});\r\n\r\nconst FlightCard = props => {\r\n    const info = props.info;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"FlightCard\">\r\n            <Card className={classes.root} onClick={event => window.location.href = \"/flights/\" + info.flight_id}>\r\n                <ul class=\"list-group-flush\">\r\n                    <li class=\"list-group-item\">Departure: {info.departure_airport}</li>\r\n                    <li class=\"list-group-item\">Arrival: {info.arrival_airport}</li>\r\n                    <li class=\"list-group-item\">Date: {info.flight_date}</li>\r\n                </ul>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nFlightCard.propTypes = {};\r\n\r\nexport default FlightCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 345,\r\n        height: 225,\r\n        marginTop: 20,\r\n    },\r\n    media: {\r\n        height: 64,\r\n        width: 64,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 20,\r\n    },\r\n});\r\n\r\nconst AirportCard = props => {\r\n    const info = props.info;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"AirportCard\">\r\n            <Card className={classes.root} onClick={event => window.location.href = \"/airports/\" + info.airport_id}>\r\n                <ul class=\"list-group-flush\">\r\n                    <li class=\"list-group-item\">Name: {info.airport_name}</li>\r\n                    <li class=\"list-group-item\">Country of origin: {info.country_name}</li>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={info.country_image_url}\r\n                    />\r\n                </ul>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nAirportCard.propTypes = {};\r\n\r\nexport default AirportCard;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport INFO_TYPES from \"../Constants/enum\";\r\nimport AirlineCard from \"./AirlineCard\";\r\nimport FlightCard from \"./FlightCard\";\r\nimport AirportCard from \"./AirportCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 2,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst _getInfoCard = (type, info) => {\r\n  switch (type) {\r\n    case INFO_TYPES.AIRLINES:\r\n      return (\r\n        <AirlineCard info={info}></AirlineCard>);\r\n    case INFO_TYPES.FLIGHTS:\r\n      return (\r\n        <FlightCard info={info}></FlightCard>\r\n      );\r\n    case INFO_TYPES.AIRPORTS:\r\n      return (\r\n        <AirportCard info={info}></AirportCard>\r\n      );\r\n    default:\r\n      return (<div></div>);\r\n  }\r\n}\r\n\r\nconst InfoGrid = props => {\r\n  const [spacing, setSpacing] = React.useState(10);\r\n  const classes = useStyles();\r\n  const infoData = props.infoData;\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={spacing}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={spacing}>\r\n          {infoData.map((info, index) => (\r\n            <Grid key={index} item xs={4}>\r\n            {_getInfoCard(props.infoCardType, info)}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default InfoGrid;","import React from 'react'\r\n\r\n\r\nconst Pagination = ({postsPerPages, totalPosts, paginate}) => {\r\n\r\n    const PageNumbers = [];\r\n    const numPages = Math.ceil(totalPosts/postsPerPages)\r\n    const currPage = 1;\r\n    for(let i = currPage; i <= Math.min(currPage + 27, Math.max(numPages, currPage+27)); i++){\r\n        PageNumbers.push(i);\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                <li className=\"prev page-item\">\r\n                    <a href=\"#\" aria-label=\"Prev\" className=\"page-link\">\r\n                        <span aria-hidden=\"true\">&laquo;</span>\r\n                    </a>\r\n                </li>\r\n                {PageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)}  className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n                <li className=\"next page-item\">\r\n                    <a href=\"#\" aria-label=\"Next\" className=\"page-link\">\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, {useState, useEffect} from 'react';\r\n\r\nimport data from \"./Data/airplanes.json\";\r\nimport InfoGrid from \"./Component/InfoGrid\";\r\nimport INFO_TYPES from './Constants/enum';\r\nimport loading from './Images/loading.gif';\r\nimport Loader from 'react-loader-spinner';\r\nimport './setup.css';\r\nimport './Component/load.scss'\r\nimport './Component/loader.css'\r\nimport Pagination from \"./Component/Pagination.js\";\r\n\r\n\r\nlet order = 1;\r\n\r\n\r\nconst Airlines = props => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [airlines, setAirlines] = useState([])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(15);\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading({isLoading: true});\r\n        timeout();\r\n        setTimeout(function () {\r\n            setLoading(false);\r\n        }, 1500)\r\n        fetch('http://api-dot-naviaero.uc.r.appspot.com/api/airlines')\r\n\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                } else {\r\n                    throw new Error('Something went wrong...');\r\n                }\r\n            })\r\n            .then(data => setAirlines(data.airlines))\r\n            .catch(error => this.setState({ error, isLoading: false }));\r\n    }, []);\r\n\r\n    function timeout() {\r\n        if (isLoading) {\r\n            return (\r\n                <div className=\"loader hidden\">\r\n                    <svg className=\"svg-calLoader\" xmlns=\"http://www.w3.org/2000/svg\" width=\"230\" height=\"230\">\r\n                        <path className=\"cal-loader__path\"\r\n                              d=\"M86.429 40c63.616-20.04 101.511 25.08 107.265 61.93 6.487 41.54-18.593 76.99-50.6 87.643-59.46 19.791-101.262-23.577-107.142-62.616C29.398 83.441 59.945 48.343 86.43 40z\"\r\n                              fill=\"none\" stroke=\"#0099cc\" stroke-width=\"4\" stroke-linecap=\"round\"\r\n                              stroke-linejoin=\"round\"\r\n                              stroke-dasharray=\"10 10 10 10 10 10 10 432\" stroke-dashoffset=\"77\"/>\r\n                        <path className=\"cal-loader__plane\"\r\n                              d=\"M141.493 37.93c-1.087-.927-2.942-2.002-4.32-2.501-2.259-.824-3.252-.955-9.293-1.172-4.017-.146-5.197-.23-5.47-.37-.766-.407-1.526-1.448-7.114-9.773-4.8-7.145-5.344-7.914-6.327-8.976-1.214-1.306-1.396-1.378-3.79-1.473-1.036-.04-2-.043-2.153-.002-.353.1-.87.586-1 .952-.139.399-.076.71.431 2.22.241.72 1.029 3.386 1.742 5.918 1.644 5.844 2.378 8.343 2.863 9.705.206.601.33 1.1.275 1.125-.24.097-10.56 1.066-11.014 1.032a3.532 3.532 0 0 1-1.002-.276l-.487-.246-2.044-2.613c-2.234-2.87-2.228-2.864-3.35-3.309-.717-.287-2.82-.386-3.276-.163-.457.237-.727.644-.737 1.152-.018.39.167.805 1.916 4.373 1.06 2.166 1.964 4.083 1.998 4.27.04.179.004.521-.076.75-.093.228-1.109 2.064-2.269 4.088-1.921 3.34-2.11 3.711-2.123 4.107-.008.25.061.557.168.725.328.512.72.644 1.966.676 1.32.029 2.352-.236 3.05-.762.222-.171 1.275-1.313 2.412-2.611 1.918-2.185 2.048-2.32 2.45-2.505.241-.111.601-.232.82-.271.267-.058 2.213.201 5.912.8 3.036.48 5.525.894 5.518.914 0 .026-.121.306-.27.638-.54 1.198-1.515 3.842-3.35 9.021-1.029 2.913-2.107 5.897-2.4 6.62-.703 1.748-.725 1.833-.594 2.286.137.46.45.833.872 1.012.41.177 3.823.24 4.37.085.852-.25 1.44-.688 2.312-1.724 1.166-1.39 3.169-3.948 6.771-8.661 5.8-7.583 6.561-8.49 7.387-8.702.233-.065 2.828-.056 5.784.011 5.827.138 6.64.09 8.62-.5 2.24-.67 4.035-1.65 5.517-3.016 1.136-1.054 1.135-1.014.207-1.962-.357-.38-.767-.777-.902-.893z\"\r\n                              className=\"cal-loader__plane\" fill=\"#000033\"/>\r\n                    </svg>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"loader hidden\">\r\n                <svg className=\"svg-calLoader\" xmlns=\"http://www.w3.org/2000/svg\" width=\"230\" height=\"230\">\r\n                    <path className=\"cal-loader__path\"\r\n                          d=\"M86.429 40c63.616-20.04 101.511 25.08 107.265 61.93 6.487 41.54-18.593 76.99-50.6 87.643-59.46 19.791-101.262-23.577-107.142-62.616C29.398 83.441 59.945 48.343 86.43 40z\"\r\n                          fill=\"none\" stroke=\"#0099cc\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-dasharray=\"10 10 10 10 10 10 10 432\" stroke-dashoffset=\"77\"/>\r\n                    <path className=\"cal-loader__plane\"\r\n                          d=\"M141.493 37.93c-1.087-.927-2.942-2.002-4.32-2.501-2.259-.824-3.252-.955-9.293-1.172-4.017-.146-5.197-.23-5.47-.37-.766-.407-1.526-1.448-7.114-9.773-4.8-7.145-5.344-7.914-6.327-8.976-1.214-1.306-1.396-1.378-3.79-1.473-1.036-.04-2-.043-2.153-.002-.353.1-.87.586-1 .952-.139.399-.076.71.431 2.22.241.72 1.029 3.386 1.742 5.918 1.644 5.844 2.378 8.343 2.863 9.705.206.601.33 1.1.275 1.125-.24.097-10.56 1.066-11.014 1.032a3.532 3.532 0 0 1-1.002-.276l-.487-.246-2.044-2.613c-2.234-2.87-2.228-2.864-3.35-3.309-.717-.287-2.82-.386-3.276-.163-.457.237-.727.644-.737 1.152-.018.39.167.805 1.916 4.373 1.06 2.166 1.964 4.083 1.998 4.27.04.179.004.521-.076.75-.093.228-1.109 2.064-2.269 4.088-1.921 3.34-2.11 3.711-2.123 4.107-.008.25.061.557.168.725.328.512.72.644 1.966.676 1.32.029 2.352-.236 3.05-.762.222-.171 1.275-1.313 2.412-2.611 1.918-2.185 2.048-2.32 2.45-2.505.241-.111.601-.232.82-.271.267-.058 2.213.201 5.912.8 3.036.48 5.525.894 5.518.914 0 .026-.121.306-.27.638-.54 1.198-1.515 3.842-3.35 9.021-1.029 2.913-2.107 5.897-2.4 6.62-.703 1.748-.725 1.833-.594 2.286.137.46.45.833.872 1.012.41.177 3.823.24 4.37.085.852-.25 1.44-.688 2.312-1.724 1.166-1.39 3.169-3.948 6.771-8.661 5.8-7.583 6.561-8.49 7.387-8.702.233-.065 2.828-.056 5.784.011 5.827.138 6.64.09 8.62-.5 2.24-.67 4.035-1.65 5.517-3.016 1.136-1.054 1.135-1.014.207-1.962-.357-.38-.767-.777-.902-.893z\"\r\n                          className=\"cal-loader__plane\" fill=\"#000033\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>;\r\n    }\r\n\r\n    function GetSortOrder(prop, ord) {\r\n        return function (a, b) {\r\n            if (ord === 1) {\r\n                if (a[prop] > b[prop]) {\r\n                    return 1;\r\n                } else if (a[prop] < b[prop]) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            } else {\r\n                if (a[prop] < b[prop]) {\r\n                    return 1;\r\n                } else if (a[prop] > b[prop]) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n\r\n//get current post\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = airlines.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n//change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Airplanes\">\r\n                <div className=\"sort\">\r\n                    <div className=\"row justify-content-end\">\r\n                        <i class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i>\r\n\r\n                        <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => {\r\n                            let newAirlines = [...airlines];\r\n                            newAirlines.sort(GetSortOrder(\"airline_name\", order));\r\n                            order = order * -1;\r\n                            setAirlines(newAirlines);\r\n                        }}>Airplane Name\r\n                        </button>\r\n\r\n                        <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => {\r\n                            let newAirlines = [...airlines];\r\n                            newAirlines.sort(GetSortOrder(\"country_name\", order));\r\n                            order = order * -1;\r\n                            setAirlines(newAirlines);\r\n                        }}>Country Name\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <InfoGrid infoData={currentPosts} infoCardType={INFO_TYPES.AIRLINES}/>\r\n                <Pagination postsPerPages={postsPerPage} totalPosts={airlines.length} paginate={paginate}>\r\n\r\n                </Pagination>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Airlines;\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport data from \"./Data/flights.json\";\r\nimport InfoGrid from \"./Component/InfoGrid\";\r\nimport INFO_TYPES from './Constants/enum';\r\nimport './setup.css';\r\nimport './Component/load.scss'\r\nimport './Component/loader.css'\r\nimport port from './f.json';\r\nimport Pagination from \"./Component/Pagination.js\";\r\n\r\nconst flightsData = port[\"flights\"];\r\n\r\nfunction GetSortOrder(prop, ord) {\r\n    return function (a, b) {\r\n        if (ord === 1) {\r\n            if (a[prop] > b[prop]) {\r\n                return 1;\r\n            } else if (a[prop] < b[prop]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            if (a[prop] < b[prop]) {\r\n                return 1;\r\n            } else if (a[prop] > b[prop]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\nconst Flights = props => {\r\n    let order = 1;\r\n    const [m, setM] = useState(flightsData);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(15);\r\n\r\n    useEffect(() => { //TODO change back\r\n        setLoading({isLoading: true});\r\n        timeout();\r\n        setTimeout(function () {\r\n            setLoading(false);\r\n        }, 1500)\r\n        setLoading({isLoading: false});\r\n    }, []);\r\n\r\n    function timeout() {\r\n        if (isLoading) {\r\n            return (\r\n                <div className=\"loader hidden\">\r\n                    <svg className=\"svg-calLoader\" xmlns=\"http://www.w3.org/2000/svg\" width=\"230\" height=\"230\">\r\n                        <path className=\"cal-loader__path\"\r\n                              d=\"M86.429 40c63.616-20.04 101.511 25.08 107.265 61.93 6.487 41.54-18.593 76.99-50.6 87.643-59.46 19.791-101.262-23.577-107.142-62.616C29.398 83.441 59.945 48.343 86.43 40z\"\r\n                              fill=\"none\" stroke=\"#0099cc\" stroke-width=\"4\" stroke-linecap=\"round\"\r\n                              stroke-linejoin=\"round\"\r\n                              stroke-dasharray=\"10 10 10 10 10 10 10 432\" stroke-dashoffset=\"77\"/>\r\n                        <path className=\"cal-loader__plane\"\r\n                              d=\"M141.493 37.93c-1.087-.927-2.942-2.002-4.32-2.501-2.259-.824-3.252-.955-9.293-1.172-4.017-.146-5.197-.23-5.47-.37-.766-.407-1.526-1.448-7.114-9.773-4.8-7.145-5.344-7.914-6.327-8.976-1.214-1.306-1.396-1.378-3.79-1.473-1.036-.04-2-.043-2.153-.002-.353.1-.87.586-1 .952-.139.399-.076.71.431 2.22.241.72 1.029 3.386 1.742 5.918 1.644 5.844 2.378 8.343 2.863 9.705.206.601.33 1.1.275 1.125-.24.097-10.56 1.066-11.014 1.032a3.532 3.532 0 0 1-1.002-.276l-.487-.246-2.044-2.613c-2.234-2.87-2.228-2.864-3.35-3.309-.717-.287-2.82-.386-3.276-.163-.457.237-.727.644-.737 1.152-.018.39.167.805 1.916 4.373 1.06 2.166 1.964 4.083 1.998 4.27.04.179.004.521-.076.75-.093.228-1.109 2.064-2.269 4.088-1.921 3.34-2.11 3.711-2.123 4.107-.008.25.061.557.168.725.328.512.72.644 1.966.676 1.32.029 2.352-.236 3.05-.762.222-.171 1.275-1.313 2.412-2.611 1.918-2.185 2.048-2.32 2.45-2.505.241-.111.601-.232.82-.271.267-.058 2.213.201 5.912.8 3.036.48 5.525.894 5.518.914 0 .026-.121.306-.27.638-.54 1.198-1.515 3.842-3.35 9.021-1.029 2.913-2.107 5.897-2.4 6.62-.703 1.748-.725 1.833-.594 2.286.137.46.45.833.872 1.012.41.177 3.823.24 4.37.085.852-.25 1.44-.688 2.312-1.724 1.166-1.39 3.169-3.948 6.771-8.661 5.8-7.583 6.561-8.49 7.387-8.702.233-.065 2.828-.056 5.784.011 5.827.138 6.64.09 8.62-.5 2.24-.67 4.035-1.65 5.517-3.016 1.136-1.054 1.135-1.014.207-1.962-.357-.38-.767-.777-.902-.893z\"\r\n                              className=\"cal-loader__plane\" fill=\"#000033\"/>\r\n                    </svg>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"loader hidden\">\r\n                <svg className=\"svg-calLoader\" xmlns=\"http://www.w3.org/2000/svg\" width=\"230\" height=\"230\">\r\n                    <path className=\"cal-loader__path\"\r\n                          d=\"M86.429 40c63.616-20.04 101.511 25.08 107.265 61.93 6.487 41.54-18.593 76.99-50.6 87.643-59.46 19.791-101.262-23.577-107.142-62.616C29.398 83.441 59.945 48.343 86.43 40z\"\r\n                          fill=\"none\" stroke=\"#0099cc\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-dasharray=\"10 10 10 10 10 10 10 432\" stroke-dashoffset=\"77\"/>\r\n                    <path className=\"cal-loader__plane\"\r\n                          d=\"M141.493 37.93c-1.087-.927-2.942-2.002-4.32-2.501-2.259-.824-3.252-.955-9.293-1.172-4.017-.146-5.197-.23-5.47-.37-.766-.407-1.526-1.448-7.114-9.773-4.8-7.145-5.344-7.914-6.327-8.976-1.214-1.306-1.396-1.378-3.79-1.473-1.036-.04-2-.043-2.153-.002-.353.1-.87.586-1 .952-.139.399-.076.71.431 2.22.241.72 1.029 3.386 1.742 5.918 1.644 5.844 2.378 8.343 2.863 9.705.206.601.33 1.1.275 1.125-.24.097-10.56 1.066-11.014 1.032a3.532 3.532 0 0 1-1.002-.276l-.487-.246-2.044-2.613c-2.234-2.87-2.228-2.864-3.35-3.309-.717-.287-2.82-.386-3.276-.163-.457.237-.727.644-.737 1.152-.018.39.167.805 1.916 4.373 1.06 2.166 1.964 4.083 1.998 4.27.04.179.004.521-.076.75-.093.228-1.109 2.064-2.269 4.088-1.921 3.34-2.11 3.711-2.123 4.107-.008.25.061.557.168.725.328.512.72.644 1.966.676 1.32.029 2.352-.236 3.05-.762.222-.171 1.275-1.313 2.412-2.611 1.918-2.185 2.048-2.32 2.45-2.505.241-.111.601-.232.82-.271.267-.058 2.213.201 5.912.8 3.036.48 5.525.894 5.518.914 0 .026-.121.306-.27.638-.54 1.198-1.515 3.842-3.35 9.021-1.029 2.913-2.107 5.897-2.4 6.62-.703 1.748-.725 1.833-.594 2.286.137.46.45.833.872 1.012.41.177 3.823.24 4.37.085.852-.25 1.44-.688 2.312-1.724 1.166-1.39 3.169-3.948 6.771-8.661 5.8-7.583 6.561-8.49 7.387-8.702.233-.065 2.828-.056 5.784.011 5.827.138 6.64.09 8.62-.5 2.24-.67 4.035-1.65 5.517-3.016 1.136-1.054 1.135-1.014.207-1.962-.357-.38-.767-.777-.902-.893z\"\r\n                          className=\"cal-loader__plane\" fill=\"#000033\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>;\r\n    }\r\n\r\n    //get current post\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = flightsData.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    //change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n    return (\r\n        <div className=\"Flights\">\r\n            <div className=\"sort\">\r\n                <div className=\"row justify-content-end\">\r\n                    <i className=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i>\r\n\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => {\r\n                        let newM = [...m];\r\n                        newM.sort(GetSortOrder(\"arrival[x].airport\", order)); //TODO\r\n                        order = order * -1;\r\n                        setM(newM);\r\n                    }}>Departure\r\n                    </button>\r\n\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => {\r\n                        let newM = [...m];\r\n                        newM.sort(GetSortOrder(\"plane_owner\", order)); //TODO\r\n                        order = order * -1;\r\n                        setM(newM);\r\n                    }}>Arrival\r\n                    </button>\r\n\r\n                    <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => {\r\n                        let newM = [...m];\r\n                        newM.sort(GetSortOrder(\"flight_date\", order)); //TODO\r\n                        order = order * -1;\r\n                        setM(newM);\r\n                    }}>Date\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div><br/></div>\r\n            <InfoGrid infoData={currentPosts} infoCardType={INFO_TYPES.FLIGHTS}/>\r\n            <Pagination postsPerPages={postsPerPage} totalPosts={flightsData.length} paginate={paginate}>\r\n\r\n            </Pagination>\r\n        </div>\r\n    );\r\n};\r\n\r\nFlights.propTypes = {};\r\n\r\nexport default Flights;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport data from \"./Data/airports.json\";\r\nimport InfoGrid from \"./Component/InfoGrid\";\r\nimport INFO_TYPES from './Constants/enum';\r\nimport './setup.css';\r\nimport './Component/load.scss'\r\nimport './Component/loader.css'\r\nimport Pagination from \"./Component/Pagination.js\";\r\n\r\nlet order = 1;\r\n\r\nconst Airports = props => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [airports, setAirports] = useState([])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(15);\r\n\r\n     useEffect(() => {\r\n        setLoading({isLoading: true});\r\n        timeout();\r\n        setTimeout(function () {\r\n            setLoading(false);\r\n        }, 1500)\r\n        fetch('http://aeroinfo.me/api/airports')\r\n\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                } else {\r\n                    throw new Error('Something went wrong...');\r\n                }\r\n            })\r\n            .then(data => setAirports(data.airports))\r\n            .catch(error => this.setState({ error, isLoading: false }));\r\n    }, []);\r\n\r\n     function timeout() {\r\n        if (isLoading) {\r\n            return (\r\n                <div className=\"loader hidden\">\r\n                    <svg className=\"svg-calLoader\" xmlns=\"http://www.w3.org/2000/svg\" width=\"230\" height=\"230\">\r\n                        <path className=\"cal-loader__path\"\r\n                              d=\"M86.429 40c63.616-20.04 101.511 25.08 107.265 61.93 6.487 41.54-18.593 76.99-50.6 87.643-59.46 19.791-101.262-23.577-107.142-62.616C29.398 83.441 59.945 48.343 86.43 40z\"\r\n                              fill=\"none\" stroke=\"#0099cc\" stroke-width=\"4\" stroke-linecap=\"round\"\r\n                              stroke-linejoin=\"round\"\r\n                              stroke-dasharray=\"10 10 10 10 10 10 10 432\" stroke-dashoffset=\"77\"/>\r\n                        <path className=\"cal-loader__plane\"\r\n                              d=\"M141.493 37.93c-1.087-.927-2.942-2.002-4.32-2.501-2.259-.824-3.252-.955-9.293-1.172-4.017-.146-5.197-.23-5.47-.37-.766-.407-1.526-1.448-7.114-9.773-4.8-7.145-5.344-7.914-6.327-8.976-1.214-1.306-1.396-1.378-3.79-1.473-1.036-.04-2-.043-2.153-.002-.353.1-.87.586-1 .952-.139.399-.076.71.431 2.22.241.72 1.029 3.386 1.742 5.918 1.644 5.844 2.378 8.343 2.863 9.705.206.601.33 1.1.275 1.125-.24.097-10.56 1.066-11.014 1.032a3.532 3.532 0 0 1-1.002-.276l-.487-.246-2.044-2.613c-2.234-2.87-2.228-2.864-3.35-3.309-.717-.287-2.82-.386-3.276-.163-.457.237-.727.644-.737 1.152-.018.39.167.805 1.916 4.373 1.06 2.166 1.964 4.083 1.998 4.27.04.179.004.521-.076.75-.093.228-1.109 2.064-2.269 4.088-1.921 3.34-2.11 3.711-2.123 4.107-.008.25.061.557.168.725.328.512.72.644 1.966.676 1.32.029 2.352-.236 3.05-.762.222-.171 1.275-1.313 2.412-2.611 1.918-2.185 2.048-2.32 2.45-2.505.241-.111.601-.232.82-.271.267-.058 2.213.201 5.912.8 3.036.48 5.525.894 5.518.914 0 .026-.121.306-.27.638-.54 1.198-1.515 3.842-3.35 9.021-1.029 2.913-2.107 5.897-2.4 6.62-.703 1.748-.725 1.833-.594 2.286.137.46.45.833.872 1.012.41.177 3.823.24 4.37.085.852-.25 1.44-.688 2.312-1.724 1.166-1.39 3.169-3.948 6.771-8.661 5.8-7.583 6.561-8.49 7.387-8.702.233-.065 2.828-.056 5.784.011 5.827.138 6.64.09 8.62-.5 2.24-.67 4.035-1.65 5.517-3.016 1.136-1.054 1.135-1.014.207-1.962-.357-.38-.767-.777-.902-.893z\"\r\n                              className=\"cal-loader__plane\" fill=\"#000033\"/>\r\n                    </svg>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"loader hidden\">\r\n                <svg className=\"svg-calLoader\" xmlns=\"http://www.w3.org/2000/svg\" width=\"230\" height=\"230\">\r\n                    <path className=\"cal-loader__path\"\r\n                          d=\"M86.429 40c63.616-20.04 101.511 25.08 107.265 61.93 6.487 41.54-18.593 76.99-50.6 87.643-59.46 19.791-101.262-23.577-107.142-62.616C29.398 83.441 59.945 48.343 86.43 40z\"\r\n                          fill=\"none\" stroke=\"#0099cc\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-dasharray=\"10 10 10 10 10 10 10 432\" stroke-dashoffset=\"77\"/>\r\n                    <path className=\"cal-loader__plane\"\r\n                          d=\"M141.493 37.93c-1.087-.927-2.942-2.002-4.32-2.501-2.259-.824-3.252-.955-9.293-1.172-4.017-.146-5.197-.23-5.47-.37-.766-.407-1.526-1.448-7.114-9.773-4.8-7.145-5.344-7.914-6.327-8.976-1.214-1.306-1.396-1.378-3.79-1.473-1.036-.04-2-.043-2.153-.002-.353.1-.87.586-1 .952-.139.399-.076.71.431 2.22.241.72 1.029 3.386 1.742 5.918 1.644 5.844 2.378 8.343 2.863 9.705.206.601.33 1.1.275 1.125-.24.097-10.56 1.066-11.014 1.032a3.532 3.532 0 0 1-1.002-.276l-.487-.246-2.044-2.613c-2.234-2.87-2.228-2.864-3.35-3.309-.717-.287-2.82-.386-3.276-.163-.457.237-.727.644-.737 1.152-.018.39.167.805 1.916 4.373 1.06 2.166 1.964 4.083 1.998 4.27.04.179.004.521-.076.75-.093.228-1.109 2.064-2.269 4.088-1.921 3.34-2.11 3.711-2.123 4.107-.008.25.061.557.168.725.328.512.72.644 1.966.676 1.32.029 2.352-.236 3.05-.762.222-.171 1.275-1.313 2.412-2.611 1.918-2.185 2.048-2.32 2.45-2.505.241-.111.601-.232.82-.271.267-.058 2.213.201 5.912.8 3.036.48 5.525.894 5.518.914 0 .026-.121.306-.27.638-.54 1.198-1.515 3.842-3.35 9.021-1.029 2.913-2.107 5.897-2.4 6.62-.703 1.748-.725 1.833-.594 2.286.137.46.45.833.872 1.012.41.177 3.823.24 4.37.085.852-.25 1.44-.688 2.312-1.724 1.166-1.39 3.169-3.948 6.771-8.661 5.8-7.583 6.561-8.49 7.387-8.702.233-.065 2.828-.056 5.784.011 5.827.138 6.64.09 8.62-.5 2.24-.67 4.035-1.65 5.517-3.016 1.136-1.054 1.135-1.014.207-1.962-.357-.38-.767-.777-.902-.893z\"\r\n                          className=\"cal-loader__plane\" fill=\"#000033\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>;\r\n    }\r\n\r\n    function GetSortOrder(prop, ord) {\r\n        return function (a, b) {\r\n            if (ord === 1) {\r\n                if (a[prop] > b[prop]) {\r\n                    return 1;\r\n                } else if (a[prop] < b[prop]) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            } else {\r\n                if (a[prop] < b[prop]) {\r\n                    return 1;\r\n                } else if (a[prop] > b[prop]) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n\r\n//get current post\r\nconst indexOfLastPost = currentPage * postsPerPage;\r\nconst indexOfFirstPost = indexOfLastPost - postsPerPage;\r\nconst currentPosts = airports.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n//change page\r\nconst paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"AirPort\">\r\n                <div className=\"sort\">\r\n                    <div className=\"row justify-content-end\">\r\n                        <i class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i>\r\n\r\n                        <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => {\r\n                            let newAirports = [...airports];\r\n                            newAirports.sort(GetSortOrder(\"airport_name\", order));\r\n                            order = order * -1;\r\n                            setAirports(newAirports);\r\n                        }}>Airport Name\r\n                        </button>\r\n\r\n                        <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => {\r\n                            let newAirports = [...airports];\r\n                            newAirports.sort(GetSortOrder(\"country_name\", order));\r\n                            order = order * -1;\r\n                            setAirports(newAirports);\r\n                        }}>Country Name\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <InfoGrid infoData={currentPosts} infoCardType={INFO_TYPES.AIRPORTS}/>\r\n                <Pagination postsPerPages={postsPerPage} totalPosts={airports.length} paginate={paginate}>\r\n\r\n                </Pagination>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Airports;\r\n","import React from 'react'\r\nimport albin from './Images/albin.jpg'\r\nimport yijing from './Images/yijing.jpeg'\r\nimport noah from './Images/noah.jpg'\r\nimport li from './Images/li.jpg'\r\nimport kevin from './Images/kevin.jpg'\r\nimport './about.css'\r\n\r\n\r\nconsole.log(albin);\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n    const loader = document.querySelector(\".loader\");\r\n    console.log(loader);\r\n});\r\n\r\nexport const About = () => (\r\n    <div className=\"about\">\r\n        <div className=\"row\">\r\n            <div className=\"member\">\r\n                <div><br/></div>\r\n                <h2>&#9992; About us</h2>\r\n                <div><br/></div>\r\n                <h4>Our team is here to help you find out information about Airplanes, Flights, Airports from across the\r\n                    world.</h4>\r\n                <div><br/></div>\r\n                <div><br/></div>\r\n                <h5>Total number of commits: </h5>\r\n                <div><br/></div>\r\n                <h5>Total number of issues: </h5>\r\n                <div><br/></div>\r\n                <h5>Total number of Unit tests: </h5>\r\n                <div><br/></div>\r\n                <div><br/></div>\r\n                <h5>Link to API: <a\r\n                    href=\"https://documenter.getpostman.com/view/11816121/SzzrXZCS?version=latest\"> AeroInfo API</a>\r\n                </h5>\r\n                <div><br/></div>\r\n                <h5>Gitlab Issues: <a href=\"https://gitlab.com/Albisourous/naviaero/-/issues\">GitLab Issues</a></h5>\r\n                <div><br/></div>\r\n                <h5>GitLab Repo: <a href=\"https://gitlab.com/Albisourous/naviaero\">Project Repository</a></h5>\r\n                <div><br/></div>\r\n                <h5>GitLab Wiki: <a href=\"https://docs.gitlab.com/ee/user/project/wiki/\">GitLab Wiki</a></h5>\r\n                <div><br/></div>\r\n                <h5>Other Sources: <a href=\"https://aviationstack.com/\">AviationStack</a></h5>\r\n                <h5><a href=\"\">Test Case</a></h5>\r\n                <h5>About Source: The Aviation stack API was built to provide a simple way of using information from\r\n                    global aviation data for real-time data.</h5>\r\n                <div><br/></div>\r\n                <h5>Other Tools: </h5>\r\n                <h5>About Tools: </h5>\r\n                <div><br/></div>\r\n                <div><br/></div>\r\n                <div><br/></div>\r\n            </div>\r\n\r\n            <div className=\"member\">\r\n                <div><br/></div>\r\n                <h2>&#9992; Albin Shrestha</h2>\r\n                <div class=\"pic\">\r\n                    <img src={albin} alt=\"Logo\"/>\r\n                </div>\r\n                <div><br/></div>\r\n                <p className=\"role\">Frontend</p>\r\n                <p>Albin Shrestha connects tech and project management companies with the information and resources they\r\n                    need in order to properly train their employees. At the University of Texas, Albin has learned how\r\n                    to appropriately communicate with peers and co-workers creating a productive workflow. His personal\r\n                    projects including his UT CS website and Unity games help distinguish him from his peers. Albin is\r\n                    currently pursuing a degree in Computer Science in hopes of working in business management or game\r\n                    design.</p>\r\n                <p>shrestha_albin@yahoo.com</p>\r\n                <p>Number of commits: </p>\r\n                <p>Number of issues: </p>\r\n                <p>Number of Unit tests: </p>\r\n                <p>\r\n                    <button className=\"contact\"><a href=\"tel:1-817-713-6090\">Contact</a></button>\r\n                </p>\r\n                <div><br/></div>\r\n                <div><br/></div>\r\n            </div>\r\n\r\n            <div className=\"member\">\r\n                <div><br/></div>\r\n                <h2>&#9992; Yijing Chen</h2>\r\n                <div className=\"pic\">\r\n                    <img src={yijing} alt=\"Me\"/>\r\n                </div>\r\n                <div><br/></div>\r\n                <p className=\"role\">Frontend</p>\r\n                <p>I have 3 cats. I am a college student in the Department of Computer Science at the University of\r\n                    Texas at Austin. I am interested in web design.</p>\r\n                <p>a1024507613@gmail.com</p>\r\n                <p>Number of commits: </p>\r\n                <p>Number of issues: </p>\r\n                <p>Number of Unit tests: </p>\r\n                <p>\r\n                    <button className=\"contact\"><a href=\"www.cs.utexas.edu/~yijing\">Contact</a></button>\r\n                </p>\r\n                <div><br/></div>\r\n            </div>\r\n\r\n            <div className=\"member\">\r\n                <div><br/></div>\r\n                <h2>&#9992; Noah Lindley</h2>\r\n                <div className=\"pic\">\r\n                    <img src={noah} alt=\"Me\"/>\r\n                </div>\r\n                <div><br/></div>\r\n                <p className=\"role\">Backend</p>\r\n                <p>I'm Noah Lindley, a Computer Science student at The University of Texas at Austin.\r\n                    I'm interested in the fields of Fin-Tech and Data Science. I enjoy problem-solving and working in\r\n                    team based environments where I can improve my personal and technical skills. In my spare time I\r\n                    enjoy running, making music, writing code, watching a plethora of sports (Used to) and experiencing\r\n                    the fun Austin has to offer such as drinking new local brews.</p>\r\n                <p>lindleywnoah@gmail.com</p>\r\n                <p>Number of commits: </p>\r\n                <p>Number of issues: </p>\r\n                <p>Number of Unit tests: </p>\r\n                <p>\r\n                    <button className=\"contact\"><a href=\"mailto: lindleywnoah@gmail.com\">Contact</a></button>\r\n                </p>\r\n                <div><br/></div>\r\n            </div>\r\n\r\n            <div className=\"member\">\r\n                <div><br/></div>\r\n                <h2>&#9992; Kevin Lu</h2>\r\n                <div className=\"pic\">\r\n                    <img src={kevin} alt=\"Me\"/>\r\n                </div>\r\n                <div><br/></div>\r\n                <p className=\"role\">Backend</p>\r\n                <p>I am a third year computer science student at UT Austin. I am interested in machine learning.</p>\r\n                <p>luluwen2000@gmail.com</p>\r\n                <p>Number of commits: </p>\r\n                <p>Number of issues: </p>\r\n                <p>Number of Unit tests: </p>\r\n                <p>\r\n                    <button className=\"contact\"><a href=\"mainto: a1024507613@gmail.com\">Contact</a></button>\r\n                </p>\r\n                <div><br/></div>\r\n            </div>\r\n\r\n            <div className=\"member\">\r\n                <div><br/></div>\r\n                <h2>&#9992; Xiaofei Li</h2>\r\n                <div className=\"pic\">\r\n                    <img src={li} alt=\"Me\"/>\r\n                </div>\r\n                <div><br/></div>\r\n                <p className=\"role\">Database</p>\r\n                <p>I am a UTCS senior student. Having interests in programming, I transfered to CS in my junior year. I\r\n                    am trying to catch up with my peers, honing my skills to become a professional programmer.</p>\r\n                <p>xiaofeili@utexas.edu</p>\r\n                <p>Number of commits: </p>\r\n                <p>Number of issues: </p>\r\n                <p>Number of Unit tests: </p>\r\n                <p>\r\n                    <button className=\"contact\"><a href=\"mainto: xiaofeili@utexas.edu\">Contact</a></button>\r\n                </p>\r\n                <div><br/></div>\r\n                <div><br/></div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nexport const Layout = (props) => (\r\n    <Container>\r\n        {props.children}\r\n    </Container>\r\n)","import React from \"react\";\r\nimport {Nav, Navbar, Form, FormControl, Button} from \"react-bootstrap\";\r\nimport \"../App.css\";\r\nimport \"../search.css\";\r\n\r\nexport const NavBar = () => (\r\n\r\n    <Navbar className=\"navbar\" fixed=\"top\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">\r\n            <i className=\"fa fa-plane\">\r\n                <span className=\"title\"> AeroInfo</span>\r\n            </i>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link className=\"link\" href=\"/\">Home</Nav.Link>\r\n                <Nav.Link className=\"link\" href=\"/airlines\">Airlines</Nav.Link>\r\n                <Nav.Link className=\"link\" href=\"/flights\">Flights</Nav.Link>\r\n                <Nav.Link className=\"link\" href=\"/airports\">Airports</Nav.Link>\r\n                <Nav.Link className=\"link\" href=\"/about\">About</Nav.Link>\r\n            </Nav>\r\n            <div>\r\n                <Form inline action=\"https://www.google.com/search\" method=\"GET\">\r\n                    <input type=\"text\" name=\"q\" placeholder=\"Search\" className=\"mr-sm-2\"/>\r\n                    <Button variant=\"outline-light\" type=\"submit\" value=\"Google Search\">Search</Button>\r\n                </Form>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    </Navbar>\r\n);\r\n","import React, {useState, useEffect, Component} from 'react';\r\nimport port from './Data/airports.json';\r\nimport air from './Data/airplanes.json';\r\nimport flight from './Data/flights.json';\r\nimport {Card} from \"react-bootstrap\";\r\nimport './setup.css';\r\nimport './info.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst num = window.location.pathname.substring(10).replace(/%20/gi, \" \");\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n\r\nconst airData = air.data.map((data) => {\r\n    return (\r\n        <InfiniteScroll dataLength={1000}\r\n                        style={{display: 'inline-flex', maxHeight: '400px', overflow: 'auto', height: 'auto'}}\r\n                        height={400}>\r\n            <div>\r\n                <p onClick={refreshPage} to={\"/airlines/\" + data.construction_number}\r\n                   onClick={event => window.location.href = \"/airlines/\" + data.construction_number}\r\n                >\r\n                    {data != null && data.length != 0 ? (\r\n                        data.construction_number\r\n                    ) : \"No Information found\"}\r\n                </p>\r\n            </div>\r\n        </InfiniteScroll>\r\n    )\r\n});\r\n\r\nconst flightData = flight.data.map((data) => {\r\n    return (\r\n        <InfiniteScroll dataLength={1000}\r\n                        style={{display: 'inline-flex', maxHeight: '400px', overflow: 'auto', height: 'auto'}}\r\n                        height={400}>\r\n            <div>\r\n                <p onClick={refreshPage} to={\"/flights/\" + data.flight.number}\r\n                   onClick={event => window.location.href = \"/flights/\" + data.flight.number}\r\n                >\r\n                    {data != null && data.flight != null && data.length != 0 ? (\r\n                        data.flight.number\r\n                    ) : \"No Information found\"}\r\n                </p>\r\n            </div>\r\n        </InfiniteScroll>\r\n    )\r\n});\r\n\r\nconst AirlinesLink =\r\n    <div className=\"link-1\">\r\n        <div className=\"card mb-5 text-center text-white\">\r\n            <h4>Airlines: </h4>\r\n            <div className=\"cardLink flex-column\">\r\n                <br></br>\r\n                {airData}\r\n            </div>\r\n        </div>\r\n    </div>;\r\n\r\nconst FlightsLink =\r\n    <div className=\"link-2\">\r\n        <div className=\"card mb-5 text-center text-white\">\r\n            <h4>Flights: </h4>\r\n            <div className=\"cardLink flex-column\">\r\n                <br></br>\r\n                {flightData}\r\n            </div>\r\n        </div>\r\n    </div>;\r\n\r\n\r\nconst AirportInfo = () => {\r\n    const [info, setInfo] = useState([]);\r\n    const [lineData, setLine] = useState([]);\r\n    const [flightData, setFlight] = useState([]);\r\n    useEffect(() => {\r\n\r\n        fetch('http://aeroinfo.me/api/airports/' + num)\r\n            .then(response => response.json())\r\n            .then(data => setInfo(data))\r\n        fetch('http://aeroinfo.me/api/airline/' + num)\r\n            .then(response => response.json())\r\n            .then(data => setLine(data))\r\n    }, []);\r\n    console.log(num)\r\n\r\n    return (\r\n        <div className=\"AirportInfo container\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"image center\">\r\n                    <div className=\"card\">\r\n                        <img src={info.country_image_url}  className=\"center\" height=\"64\"></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    {AirlinesLink}\r\n                </div>\r\n\r\n\r\n                <div clasNames=\"w-100 \"></div>\r\n\r\n                <div className=\"description\">\r\n                    <div className=\"card bg-dark text-center text-white\">\r\n                        <div className=\"card-body\">\r\n                            <Card.Title>{info.airport_name}</Card.Title>\r\n                            <Card.Title>Country of origin: {info.country_name}</Card.Title>\r\n                            <Card.Title>Timezone: {info.timezone}</Card.Title>\r\n                            <Card.Title>GMT: {info.gmt}</Card.Title>\r\n                            <Card.Title>Iata Code: {info.iata_code}</Card.Title>\r\n                            <Card.Title>GeoName ID: {info.geoname_id}</Card.Title>\r\n                            <Card.Title>Latitude: {info.latitude}</Card.Title>\r\n                            <Card.Title>Longitude: {info.longitude}</Card.Title>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    {FlightsLink}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport {AirportInfo};\r\n\r\n\r\n\r\n","import React, {useState, useEffect, Component} from 'react';\r\nimport port from './f.json';\r\nimport {Card} from \"react-bootstrap\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport './info.css';\r\n\r\n\r\nconst id = window.location.pathname.substring(9).replace(/%20/gi, \" \");\r\nconst info = port.flights.filter(data => data.flight_id == id);\r\nconst flightData = info.map((data, index, airport_name) => {\r\n    return (\r\n        <div className=\"FlightInfo container\">\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"image\">\r\n                    <div className=\"card\">\r\n                        <img src={\"https://www.you-fly.com/aptimg/raw/aid,apt,h,e,hear,ai,1304169445519.jpg\"}></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"link-1 mb-5\">\r\n\r\n                    <div className=\"card bg-dark text-center text-white\">\r\n                        <h1>Flights: </h1>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"w-100 \"></div>\r\n\r\n                <div className=\"description\">\r\n                    <div className=\"card bg-dark text-center text-white\">\r\n                        <div className=\"card-body\">\r\n                            <Card.Title>Departure: {data.departure_airport}</Card.Title>\r\n                            <Card.Title>Departure Scheduled: {data.departure_scheduled}</Card.Title>\r\n                            <Card.Title>Arrival: {data.arrival_airport}</Card.Title>\r\n                            <Card.Title>Departure Scheduled: {data.arrival_scheduled}</Card.Title>\r\n                            <Card.Title>Flight Number: {data.flight_number}</Card.Title>\r\n                            <Card.Title>Date: {data.flight_date}</Card.Title>\r\n                            <Card.Title>Status: {data.flight_status}</Card.Title>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"link-2\">\r\n                    <div className=\"card text-center text-white\">\r\n                        <h1>Airports:</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n});\r\n\r\nclass FlightInfo extends Component {\r\n    // const [info, setInfo] = useState([]);\r\n    //\r\n    // useEffect(() => {\r\n    //\r\n    //     fetch('http://127.0.0.1:8080/api/flights/' + num)\r\n    //         .then(response => response.json())\r\n    //         .then(data => setInfo(data))\r\n    //\r\n    // }, []);\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div><br/></div>\r\n                {flightData}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {FlightInfo};\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { Home } from \"./Home\";\r\nimport Airlines from \"./Airlines\";\r\nimport Flights from \"./Flights\";\r\nimport Airports from \"./Airports\";\r\nimport { About } from \"./About\";\r\nimport { Layout } from \"./Component/Layout\";\r\nimport { NavBar } from \"./Component/NavBar\";\r\nimport { AirportInfo } from \"./AirportInfo\";\r\nimport { FlightInfo } from \"./FlightInfo\";\r\nimport { AirlineInfo } from \"./AirlineInfo\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavBar />\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/airlines\" exact>\r\n                        <Layout><Airlines /></Layout>\r\n                    </Route>\r\n                    <Route path=\"/airlines/:id\">\r\n                        <Layout><AirlineInfo /></Layout>\r\n                    </Route>\r\n                    <Route path=\"/flights\" exact>\r\n                        <Layout> <Flights /></Layout>\r\n                    </Route>\r\n                    <Route path=\"/flights/:id\">\r\n                        <Layout> <FlightInfo /></Layout>\r\n                    </Route>\r\n                    <Route path=\"/airports\" exact>\r\n                        <Layout>  <Airports /></Layout>\r\n                    </Route>\r\n                    <Route path=\"/airports/:id\">\r\n                        <Layout>   <AirportInfo /></Layout>\r\n                    </Route>\r\n                    <Route path=\"/about\">\r\n                        <Layout>  <About /></Layout>\r\n                        <Route path=\"/api\"></Route>\r\n                    </Route>\r\n                    <Route path=\"/\" exact> <Home />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"media/Video1.cf8262d8.mp4\";","module.exports = __webpack_public_path__ + \"media/albin.6409a7b5.jpg\";","module.exports = __webpack_public_path__ + \"media/yijing.1cb3cd0e.jpeg\";","module.exports = __webpack_public_path__ + \"media/noah.505002a9.jpg\";","module.exports = __webpack_public_path__ + \"media/li.b9b63fdc.jpg\";","module.exports = __webpack_public_path__ + \"media/kevin.96a5638c.jpg\";"],"sourceRoot":""}